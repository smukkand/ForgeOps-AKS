{
    "baseURI": "http://pentest-app:80",
    "handler": {
      "type": "Chain",
      "config": {
        "filters": [
          {
            "type": "ScriptableFilter",
            "config": {
              "type": "application/x-groovy",
              "source": [
                "request.uri.path = request.uri.path.substring(3)",
                "return next.handle(context, request)"
              ]
            }
          },
          {
            "type": "OAuth2ResourceServerFilter",
            "config": {
              "scopes": {
                "type": "ScriptableResourceAccess",
                "config": {
                  "type": "application/x-groovy",
                  "source": [
                    "// Minimal set of required scopes",
                    "def scopes = [ ] as Set",
                    "switch (request.method) {",
                    "  case 'GET':",
                    "    // Require another scope to access this resource",
                    "    scopes += 'read'",
                    "    break",
                    "  case 'PUT':",
                    "    // Require another scope to access this resource",
                    "    scopes += 'write'",
                    "    break",
                    "}",
                    "return scopes"
                  ]
                }
              },
              "requireHttps": false,
              "realm": "OpenIG",
              "accessTokenResolver": {
                "type": "TokenIntrospectionAccessTokenResolver",
                "config": {
                  "endpoint": "http://am/am/oauth2/realms/rest/realms/stateful/introspect",
                  "providerHandler": {
                    "type": "Chain",
                    "config": {
                      "filters": [
                        {
                          "type": "HeaderFilter",
                          "config": {
                            "messageType": "request",
                            "add": {
                              "Authorization": [
                                "Basic ${encodeBase64('introspector:3QE@2q9M')}"
                              ]
                            }
                          }
                        }
                      ],
                      "handler": "ForgeRockClientHandler"
                    }
                  }
                }
              }
            }
          }
        ],
        "handler": {
          "type": "Delegate",
          "MyCapture": "all",
          "config": {
            "delegate": "ForgeRockClientHandler"
          }
        }
      }
    },
    "condition": "${matches(request.uri.path, '^/ig/rest')}"
  }